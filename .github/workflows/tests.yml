name: Run tests

on:
  push:
  pull_request:

jobs:
  tests:
    name: ${{ matrix.OS }} - Py${{ matrix.PYTHON_VERSION }}
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        OS: ["ubuntu-latest", "windows-latest", "macos-latest"]
        PYTHON_VERSION: ["3.7", "3.10", "pypy-3.8"]
        include:
          - PYTHON_VERSION: "3.7"
            EXTRA_DEPS: '"jsonschema<2.7"'
          - PYTHON_VERSION: "3.10"
            EXTRA_DEPS: ""
          - PYTHON_VERSION: "pypy-3.8"
            EXTRA_DEPS: '"jsonschema<4"'
        exclude:
          - PYTHON_VERSION: "pypy-3.8"
            OS: "windows-latest"
          - PYTHON_VERSION: "pypy-3.8"
            OS: "macos-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - name: Install test dependencies
        run: |
          pip install .[test]
          pip install codecov pytest-cov
      - name: Install nbformat
        run: |
          pip install . ${{ matrix.EXTRA_DEPS }}
          pip freeze
      - name: List dependencies
        run: pip list
      - name: Run tests
        run: python -m pytest -v --cov=nbformat --cov-report term-missing:skip-covered --no-cov-on-fail
      - name: Coverage
        run: codecov

  # Run "pre-commit run --all-files --hook-stage=manual"
  pre-commit:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: pre-commit/action@v2.0.0
        with:
          extra_args: --all-files --hook-stage=manual
      - name: Help message if pre-commit fail
        if: ${{ failure() }}
        run: |
          echo "You can install pre-commit hooks to automatically run formatting"
          echo "on each commit with:"
          echo "    pre-commit install"
          echo "or you can run by hand on staged files with"
          echo "    pre-commit run"
          echo "or after-the-fact on already committed files with"
          echo "    pre-commit run --all-files --hook-stage=manual"

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - name: Test docs
        run: |
          pip install .
          cd docs
          pip install -r requirements.txt
          make html SPHINXOPTS="-W"
          make linkcheck
